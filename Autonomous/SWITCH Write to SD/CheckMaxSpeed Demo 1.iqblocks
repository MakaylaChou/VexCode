{"mode":"Blocks","hardwareTarget":"brain","workspace":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"_2.^beQjx|FGt38A,8(E\">Counter</variable><variable id=\"MwY`r^_Gud+tRkK3=Y]e\">TotalTime</variable></variables><block type=\"iq_events_when_touchled\" id=\"%HY.wJEm;6#N2F_Y;fiW\" x=\"391\" y=\"-450\"><field name=\"TOUCHLED\">TouchLED1</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"iq_sensing_reset_timer\" id=\"7.j1jkxDq[VtE`;Q9^l5\"><next><block type=\"iq_motion_spin\" id=\"^!)@nL*8HwhxZH(-lR@i\"><field name=\"MOTOR\">RightWheel</field><field name=\"DIRECTION\">fwd</field><next><block type=\"iq_motion_spin\" id=\"WMLGl0b|SIgiT{|I5LkR\"><field name=\"MOTOR\">LeftWheel</field><field name=\"DIRECTION\">fwd</field><next><block type=\"pg_mixed_multiline_command\" id=\"OczHaQLln)qx`1^m3D;T\"><field name=\"MULTILINE_INPUT\">Record = \"\"</field><next><block type=\"iq_control_repeat_until\" id=\"tqGbbhnoIX{u/8rkH-$:\"><value name=\"CONDITION\"><block type=\"iq_operator_less_than\" id=\"R|kKoP@PE(YzGpP=rx@D\"><value name=\"OPERAND1\"><shadow type=\"math_number\" id=\"5~yNV~/ikcl%4cd=67v]\"><field name=\"NUM\">6</field></shadow></value><value name=\"OPERAND2\"><shadow type=\"math_number\" id=\"=7V~gn/_$Re1p3$9MH|~\"><field name=\"NUM\">50</field></shadow><block type=\"iq_sensing_position_of_motor\" id=\"nl0`+5cu-e@=j;c91.JP\"><field name=\"MOTOR\">RightWheel</field><field name=\"UNITS\">rev</field></block></value></block></value><statement name=\"SUBSTACK\"><block type=\"pg_mixed_multiline_command\" id=\"y]h6Hxb,FT_i}U$TtYt2\"><field name=\"MULTILINE_INPUT\">Record += \"%3.2f\" % RightWheel.velocity(PERCENT) + \", \" + \"%3.2f\" % LeftWheel.velocity(PERCENT) + \"\\n\"</field></block></statement><next><block type=\"iq_motion_stop_motor\" id=\"/iwt[`Kd?5B.DZ0D+.pS\"><field name=\"MOTOR\">RightWheel</field><next><block type=\"iq_motion_stop_motor\" id=\"R1D%pjOh:u|utD5Kf73[\"><field name=\"MOTOR\">LeftWheel</field><next><block type=\"pg_mixed_multiline_command\" id=\"cRl):2F8+*oDnj%v`kpW\"><field name=\"MULTILINE_INPUT\">Record += \"EndTime: \" \"%6.2f\" % brain.timer.time(MSEC) + \"\\n\"</field><next><block type=\"pg_mixed_multiline_command\" id=\"x,yUR_d-($!wz83ZeKK2\"><field name=\"MULTILINE_INPUT\">brain.sdcard.savefile(\"speed.txt\", bytearray(Record, 'utf-8'))</field></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block><block type=\"iq_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" x=\"-130\" y=\"-150\"><next><block type=\"iq_motion_set_motor_velocity\" id=\"R]MfU,.~x~M8F]5S$;x}\"><field name=\"MOTOR\">LeftWheel</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"=GevDV!Kjt|ka[vJvpwA\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"iq_motion_set_motor_velocity\" id=\"`Nu[x=ilgkq=.cDN.|9t\"><field name=\"MOTOR\">RightWheel</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"TIw|I[cx]#XQnoKJV4i8\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"iq_motion_set_motor_torque\" id=\"miN5@kM4W(g@U,5Z0@x+\"><field name=\"MOTOR\">RightWheel</field><value name=\"TORQUE\"><shadow type=\"math_number\" id=\"s=W5ug;$#Bu@,.qM-$Wz\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"iq_motion_set_motor_torque\" id=\"KEmJHTN)*zdLQMCgtT+s\"><field name=\"MOTOR\">LeftWheel</field><value name=\"TORQUE\"><shadow type=\"math_number\" id=\"2]q.DBEU65G{,w$EYP#]\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"iq_motion_set_motor_position\" id=\"tgQuy5Nj]Ws#w)fxu+E6\"><field name=\"MOTOR\">LeftWheel</field><field name=\"UNITS\">rev</field><value name=\"DEGS\"><shadow type=\"math_number\" id=\"FAgmw-ahLZf|im,]za5(\"><field name=\"NUM\">0</field></shadow></value><next><block type=\"iq_motion_set_motor_position\" id=\"PN=lJs+^C/xY`KdXgk[d\"><field name=\"MOTOR\">RightWheel</field><field name=\"UNITS\">rev</field><value name=\"DEGS\"><shadow type=\"math_number\" id=\"3JE4C$c]Pkd0_5dBzb(#\"><field name=\"NUM\">0</field></shadow></value></block></next></block></next></block></next></block></next></block></next></block></next></block></xml>","robotConfig":[{"port":[3],"name":"RightWheel","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse"},"triportSourcePort":22},{"port":[4],"name":"LeftWheel","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse"},"triportSourcePort":22},{"port":[5],"name":"Gyro5","customName":false,"deviceType":"Gyro","deviceClass":"gyro","setting":{},"triportSourcePort":22},{"port":[1],"name":"TouchLED1","customName":false,"deviceType":"TouchLED","deviceClass":"touchled","setting":{},"triportSourcePort":22},{"port":[6],"name":"TouchLED6","customName":false,"deviceType":"TouchLED","deviceClass":"touchled","setting":{},"triportSourcePort":22}],"slot":4,"platform":"IQ","sdkVersion":"20230818.11.00.00","appVersion":"4.0.1","minVersion":"3.0.0","fileFormat":"2.0.0","targetBrainGen":"Second","v5SoundsEnabled":false,"downloadLanguage":"python","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START IQ MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END IQ MACROS\n\n\n// Robot configuration code.\ninertial BrainInertial = inertial();\nmotor RightWheel = motor(PORT3, true);\nmotor LeftWheel = motor(PORT4, false);\ngyro Gyro5 = gyro(PORT5);\ntouchled TouchLED1 = touchled(PORT1);\ntouchled TouchLED6 = touchled(PORT6);\n\n\n// generating and setting random seed\nvoid initializeRandomSeed(){\n  wait(100,msec);\n  double xAxis = BrainInertial.acceleration(xaxis) * 1000;\n  double yAxis = BrainInertial.acceleration(yaxis) * 1000;\n  double zAxis = BrainInertial.acceleration(zaxis) * 1000;\n  // Combine these values into a single integer\n  int seed = int(\n    xAxis + yAxis + zAxis\n  );\n  // Set the seed\n  srand(seed); \n}\n\n\n\nvoid vexcodeInit() {\n\n  // Initializing random seed.\n  initializeRandomSeed(); \n}\n\n\n// Generated code.\n\n// Include the IQ Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\nfloat vexcode_brain_precision = 0, vexcode_console_precision = 0, Counter, TotalTime;\n\n// \"when TouchLED1 pressed\" hat block\nvoid onevent_TouchLED1_pressed_0() {\n  Brain.Timer.reset();\n  RightWheel.spin(forward);\n  LeftWheel.spin(forward);\n  while (!(6.0 < RightWheel.position(turns))) {\n  wait(20, msec);\n  }\n  RightWheel.stop();\n  LeftWheel.stop();\n}\n\n// \"when started\" hat block\nint whenStarted1() {\n  LeftWheel.setVelocity(100.0, percent);\n  RightWheel.setVelocity(100.0, percent);\n  RightWheel.setMaxTorque(100.0, percent);\n  LeftWheel.setMaxTorque(100.0, percent);\n  LeftWheel.setPosition(0.0, turns);\n  RightWheel.setPosition(0.0, turns);\n  return 0;\n}\n\n\nint main() {\n  // Initializing Robot Configuration. DO NOT REMOVE!\n  vexcodeInit();\n\n  // register event handlers\n  TouchLED1.pressed(onevent_TouchLED1_pressed_0);\n\n  wait(15, msec);\n  whenStarted1();\n}","target":"Physical"}