{"mode":"Blocks","hardwareTarget":"brain","workspace":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"_2.^beQjx|FGt38A,8(E\">myVariable</variable><variable id=\"5~{Mk.TwLpiT;k|nheb(\">BucketPosition</variable><variable type=\"boolean\" id=\"4FEI3O]Jgj,ab}|[R{(w\">Spinning</variable><variable type=\"boolean\" id=\"/N+X*Ge-T=E~hJ+idC`%\">SecClick</variable></variables><block type=\"iq_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" x=\"-70\" y=\"-50\"><next><block type=\"iq_variables_set_boolean_variable\" id=\")@gWcWucS`k]~XMZGNy4\"><field name=\"VARIABLE\" id=\"4FEI3O]Jgj,ab}|[R{(w\" variabletype=\"boolean\">Spinning</field><value name=\"VALUE\"><shadow type=\"bool_input\" id=\"}b(5}go,L)l.Htmh6@BV\"><field name=\"VALUE\">false</field></shadow></value><next><block type=\"iq_motion_set_motor_velocity\" id=\"$*SE8j6a8`#I*_2lU2~@\"><field name=\"MOTOR\">Escalator</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"7Ni]1iCCFGC2c,k.-r8P\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"iq_motion_set_motor_torque\" id=\"GA?_*8.jhf-xEA~=yqnN\"><field name=\"MOTOR\">Escalator</field><value name=\"TORQUE\"><shadow type=\"math_number\" id=\"^Cza,^oLkN]RPuA?(Ri%\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"iq_motion_set_motor_velocity\" id=\".+UCQ4i@E#kW[M4EcFu-\"><field name=\"MOTOR\">Flywheel</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"3`tB+TzMC5qQ05=GfMIW\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"iq_motion_set_motor_torque\" id=\"-D}_#~$I|=e/W~_Q@7sx\"><field name=\"MOTOR\">Flywheel</field><value name=\"TORQUE\"><shadow type=\"math_number\" id=\"WJc5H$B{p}AT3)LHZO#o\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"iq_variables_set_boolean_variable\" id=\";8Cb~]+39h6hpBFPR:9W\"><field name=\"VARIABLE\" id=\"/N+X*Ge-T=E~hJ+idC`%\" variabletype=\"boolean\">SecClick</field><value name=\"VALUE\"><shadow type=\"bool_input\" id=\"N1u^0xyK;}3X@faY2XIv\"><field name=\"VALUE\">false</field></shadow></value></block></next></block></next></block></next></block></next></block></next></block></next></block><block type=\"iq_events_when_controller_button\" id=\"ad2UDRuX6jjc.fG+ulHt\" x=\"430\" y=\"-50\"><field name=\"BUTTON\">ButtonRDown</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"iq_motion_spin\" id=\"]BJcaCOWW7BftT~:N[!;\"><field name=\"MOTOR\">Escalator</field><field name=\"DIRECTION\">rev</field><next><block type=\"iq_motion_spin\" id=\"79HAuBP)98+,!^}YUCqo\"><field name=\"MOTOR\">Flywheel</field><field name=\"DIRECTION\">rev</field><next><block type=\"iq_variables_set_boolean_variable\" id=\"ebE7:K6y^HcMNQq#8Z|G\"><field name=\"VARIABLE\" id=\"4FEI3O]Jgj,ab}|[R{(w\" variabletype=\"boolean\">Spinning</field><value name=\"VALUE\"><shadow type=\"bool_input\" id=\"9*$ieM(YH:8;vyc57$[I\"><field name=\"VALUE\">true</field></shadow></value><next><block type=\"iq_control_if_then_else\" id=\"HI|+W`F}rLw3WNY0a1Gt\"><value name=\"CONDITION\"><block type=\"iq_operator_less_than\" id=\"8ZZJy%`)Dh.we|0/:CTc\"><value name=\"OPERAND1\"><shadow type=\"math_number\" id=\"$o~vJoAlbRMIa[Lht7UQ\"><field name=\"NUM\">0</field></shadow><block type=\"iq_sensing_timer_value\" id=\"0/|1aWi|_$HR-pkXJA9J\"></block></value><value name=\"OPERAND2\"><shadow type=\"math_number\" id=\"=rMUAW!+ji!Rh3hB$FTo\"><field name=\"NUM\">0.5</field></shadow></value></block></value><statement name=\"SUBSTACK\"><block type=\"iq_other_comment\" id=\"[CqJaTq?F^:4?1h]qv5l\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"/Qp-h+6M7iB[0Q%kyN%T\"><field name=\"comment\">possible double click</field></shadow></value><next><block type=\"iq_variables_set_boolean_variable\" id=\"GjKJzbG2|@hRV5Xjdf|u\"><field name=\"VARIABLE\" id=\"/N+X*Ge-T=E~hJ+idC`%\" variabletype=\"boolean\">SecClick</field><value name=\"VALUE\"><shadow type=\"bool_input\" id=\"#oG9q*Z3-~.^}D:%h,T#\"><field name=\"VALUE\">true</field></shadow></value></block></next></block></statement><statement name=\"SUBSTACK2\"><block type=\"iq_other_comment\" id=\"z8U}LM84$drCqb0Q;sJ2\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"5ottT{+nVQEhJ[t_qEa9\"><field name=\"comment\">not double click</field></shadow></value><next><block type=\"iq_sensing_reset_timer\" id=\"~T+CgaFPh.@GttrdmZ2M\"><next><block type=\"iq_variables_set_boolean_variable\" id=\"^ta0MgRXXTuXUciM~)R1\"><field name=\"VARIABLE\" id=\"/N+X*Ge-T=E~hJ+idC`%\" variabletype=\"boolean\">SecClick</field><value name=\"VALUE\"><shadow type=\"bool_input\" id=\"@9b?/`z=zt?.3iJhNzib\"><field name=\"VALUE\">false</field></shadow></value></block></next></block></next></block></statement></block></next></block></next></block></next></block></next></block><block type=\"iq_events_when_controller_button\" id=\"PsoK.8)@j4:H-mxL/Oe+\" x=\"910\" y=\"-50\"><field name=\"BUTTON\">ButtonRDown</field><field name=\"EVENTTYPE\">released</field><next><block type=\"iq_control_if_then_else\" id=\"cdEnsj5hE~!`5Porjm9)\"><value name=\"CONDITION\"><block type=\"iq_variables_boolean_variable\" id=\"/|B?T!G:c@el3DsjsfG`\"><field name=\"VARIABLE\" id=\"/N+X*Ge-T=E~hJ+idC`%\" variabletype=\"boolean\">SecClick</field></block></value><statement name=\"SUBSTACK\"><block type=\"iq_control_if_then_else\" id=\"Cz,HSw6vT,}tJ(,K7{^#\"><value name=\"CONDITION\"><block type=\"iq_operator_less_than\" id=\"I0HVzCz#f@fGa*b][EAm\"><value name=\"OPERAND1\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"iq_sensing_timer_value\" id=\"+hFu{JFWsMkWUqZqV9FD\"></block></value><value name=\"OPERAND2\"><shadow type=\"math_number\" id=\"0z%h#e|i1K6AjD3su_wU\"><field name=\"NUM\">0.5</field></shadow></value></block></value><statement name=\"SUBSTACK\"><block type=\"iq_variables_set_boolean_variable\" id=\"tPQee~rKaDJmi`70w4ID\"><field name=\"VARIABLE\" id=\"/N+X*Ge-T=E~hJ+idC`%\" variabletype=\"boolean\">SecClick</field><value name=\"VALUE\"><shadow type=\"bool_input\" id=\"id.F6.WWhp]/h:?9!6Un\"><field name=\"VALUE\">false</field></shadow></value><next><block type=\"iq_variables_set_boolean_variable\" id=\"g#eo[odbNBWU@B8Bu;6J\"><field name=\"VARIABLE\" id=\"4FEI3O]Jgj,ab}|[R{(w\" variabletype=\"boolean\">Spinning</field><value name=\"VALUE\"><shadow type=\"bool_input\" id=\"4;qd9()yLzT9F9Kx|}%#\"><field name=\"VALUE\">true</field></shadow></value></block></next></block></statement><statement name=\"SUBSTACK2\"><block type=\"procedures_call\" id=\"oOQY@DH~*}_hQ80Jf0iP\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" proccode=\"IntakeSpin\" proceduredefid=\"P^k%X-kUh#osys=E$5iS\" argumentids=\"[]\" warp=\"false\"></mutation><next><block type=\"iq_variables_set_boolean_variable\" id=\"vUP6{?gqBVh3m2_UPyRs\"><field name=\"VARIABLE\" id=\"4FEI3O]Jgj,ab}|[R{(w\" variabletype=\"boolean\">Spinning</field><value name=\"VALUE\"><shadow type=\"bool_input\" id=\"UZk),#a%n[vgn[BWdO,[\"><field name=\"VALUE\">true</field></shadow></value><next><block type=\"iq_variables_set_boolean_variable\" id=\"VqWz%12t/*g)w|h,BhFr\"><field name=\"VARIABLE\" id=\"/N+X*Ge-T=E~hJ+idC`%\" variabletype=\"boolean\">SecClick</field><value name=\"VALUE\"><shadow type=\"bool_input\" id=\"d^1?M2j/lpu_hW!_b=[c\"><field name=\"VALUE\">false</field></shadow></value></block></next></block></next></block></statement></block></statement><statement name=\"SUBSTACK2\"><block type=\"procedures_call\" id=\"J^O!0.2;{;I?C4kE;ib$\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" proccode=\"IntakeSpin\" proceduredefid=\"P^k%X-kUh#osys=E$5iS\" argumentids=\"[]\" warp=\"false\"></mutation><next><block type=\"iq_variables_set_boolean_variable\" id=\"?ig1B~JUGD_-hzb+iBZB\"><field name=\"VARIABLE\" id=\"4FEI3O]Jgj,ab}|[R{(w\" variabletype=\"boolean\">Spinning</field><value name=\"VALUE\"><shadow type=\"bool_input\" id=\"g58M9v5vEmi_Ml,cC-8m\"><field name=\"VALUE\">true</field></shadow></value></block></next></block></statement></block></next></block><block type=\"procedures_definition\" id=\"tp=L/PUGJm*~9gfo9fLB\" x=\"-50\" y=\"430\"><statement name=\"custom_block\"><shadow type=\"procedures_prototype\" id=\"VcZASsFcn%qbcd!):?F]\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" proccode=\"IntakeSpin\" proceduredefid=\"VcZASsFcn%qbcd!):?F]\" argumentids=\"[]\" argumentnames=\"[]\" argumentdefaults=\"[]\" argumenttypes=\"[]\" warp=\"false\"></mutation></shadow></statement><next><block type=\"iq_motion_spin\" id=\"_:M?K}2m[$@l?Gy}+MGu\"><field name=\"MOTOR\">Escalator</field><field name=\"DIRECTION\">fwd</field><next><block type=\"iq_motion_spin\" id=\"bvEH2C+-5Ov^,8H*|B!F\"><field name=\"MOTOR\">Flywheel</field><field name=\"DIRECTION\">fwd</field></block></next></block></next></block></xml>","robotConfig":[{"port":[3,4,null],"name":"Drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"type":"2-motor","wheelSize":"200mm","gearRatio":"3:2","direction":"rev","gyroType":"none","width":"380","unit":"mm","wheelbase":"380","wheelbaseUnit":"mm","xOffset":"0","yOffset":"0","thetaOffset":"0"},"triportSourcePort":22},{"port":[],"name":"Controller","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","e":"","eDir":"false","f":"","fDir":"false","l3r3":"","l3r3Dir":"false","drive":"split"},"triportSourcePort":22},{"port":[10,12],"name":"Bucket","customName":true,"deviceType":"MotorGroup","deviceClass":"motor_group","setting":{"fwd":"forward","rev":"reverse","motor_a_reversed":"false","motor_b_reversed":"true"},"triportSourcePort":22},{"port":[9],"name":"Escalator","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse"},"triportSourcePort":22},{"port":[11],"name":"Flywheel","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse"},"triportSourcePort":22}],"slot":1,"platform":"IQ","sdkVersion":"20230818.11.00.00","appVersion":"4.0.3","minVersion":"3.0.0","fileFormat":"2.0.0","targetBrainGen":"Second","v5SoundsEnabled":false,"downloadLanguage":"python","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START IQ MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END IQ MACROS\n\n\n// Robot configuration code.\ninertial BrainInertial = inertial();\nmotor LeftDriveSmart = motor(PORT3, 1.5, true);\nmotor RightDriveSmart = motor(PORT4, 1.5, false);\ndrivetrain Drivetrain = drivetrain(LeftDriveSmart, RightDriveSmart, 200, 380, 380, mm, 1);\ncontroller Controller = controller();\nmotor BucketMotorA = motor(PORT10, false);\nmotor BucketMotorB = motor(PORT12, true);\nmotor_group Bucket = motor_group(BucketMotorA, BucketMotorB);\n\nmotor Escalator = motor(PORT9, false);\nmotor Flywheel = motor(PORT11, false);\n\n\n// generating and setting random seed\nvoid initializeRandomSeed(){\n  wait(100,msec);\n  double xAxis = BrainInertial.acceleration(xaxis) * 1000;\n  double yAxis = BrainInertial.acceleration(yaxis) * 1000;\n  double zAxis = BrainInertial.acceleration(zaxis) * 1000;\n  // Combine these values into a single integer\n  int seed = int(\n    xAxis + yAxis + zAxis\n  );\n  // Set the seed\n  srand(seed); \n}\n\n\n\nvoid vexcodeInit() {\n\n  // Initializing random seed.\n  initializeRandomSeed(); \n}\n\n\n// Generated code.\n\n\n\n// define variable for remote controller enable/disable\nbool RemoteControlCodeEnabled = true;\n// define variables used for controlling motors based on controller inputs\nbool DrivetrainLNeedsToBeStopped_Controller = true;\nbool DrivetrainRNeedsToBeStopped_Controller = true;\n\n// define a task that will handle monitoring inputs from Controller\nint rc_auto_loop_function_Controller() {\n  // process the controller input every 20 milliseconds\n  // update the motors based on the input values\n  while(true) {\n    if(RemoteControlCodeEnabled) {\n      \n      // calculate the drivetrain motor velocities from the controller joystick axies\n      // left = AxisA + AxisC\n      // right = AxisA - AxisC\n      int drivetrainLeftSideSpeed = Controller.AxisA.position() + Controller.AxisC.position();\n      int drivetrainRightSideSpeed = Controller.AxisA.position() - Controller.AxisC.position();\n      \n      // check if the value is inside of the deadband range\n      if (drivetrainLeftSideSpeed < 5 && drivetrainLeftSideSpeed > -5) {\n        // check if the left motor has already been stopped\n        if (DrivetrainLNeedsToBeStopped_Controller) {\n          // stop the left drive motor\n          LeftDriveSmart.stop();\n          // tell the code that the left motor has been stopped\n          DrivetrainLNeedsToBeStopped_Controller = false;\n        }\n      } else {\n        // reset the toggle so that the deadband code knows to stop the left motor nexttime the input is in the deadband range\n        DrivetrainLNeedsToBeStopped_Controller = true;\n      }\n      // check if the value is inside of the deadband range\n      if (drivetrainRightSideSpeed < 5 && drivetrainRightSideSpeed > -5) {\n        // check if the right motor has already been stopped\n        if (DrivetrainRNeedsToBeStopped_Controller) {\n          // stop the right drive motor\n          RightDriveSmart.stop();\n          // tell the code that the right motor has been stopped\n          DrivetrainRNeedsToBeStopped_Controller = false;\n        }\n      } else {\n        // reset the toggle so that the deadband code knows to stop the right motor next time the input is in the deadband range\n        DrivetrainRNeedsToBeStopped_Controller = true;\n      }\n      \n      // only tell the left drive motor to spin if the values are not in the deadband range\n      if (DrivetrainLNeedsToBeStopped_Controller) {\n        LeftDriveSmart.setVelocity(drivetrainLeftSideSpeed, percent);\n        LeftDriveSmart.spin(forward);\n      }\n      // only tell the right drive motor to spin if the values are not in the deadband range\n      if (DrivetrainRNeedsToBeStopped_Controller) {\n        RightDriveSmart.setVelocity(drivetrainRightSideSpeed, percent);\n        RightDriveSmart.spin(forward);\n      }\n    }\n    // wait before repeating the process\n    wait(20, msec);\n  }\n  return 0;\n}\n\ntask rc_auto_loop_task_Controller(rc_auto_loop_function_Controller);\n\n// Include the IQ Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\n// User defined function\nvoid myblockfunction_IntakeSpin();\n\nfloat myVariable, BucketPosition;\n\nbool Spinning, SecClick;\n\n// User defined function\nvoid myblockfunction_IntakeSpin() {\n  Escalator.spin(forward);\n  Flywheel.spin(forward);\n}\n\n// \"when started\" hat block\nint whenStarted1() {\n  Spinning = false;\n  Escalator.setVelocity(100.0, percent);\n  Escalator.setMaxTorque(100.0, percent);\n  Flywheel.setVelocity(100.0, percent);\n  Flywheel.setMaxTorque(100.0, percent);\n  SecClick = false;\n  return 0;\n}\n\n// \"when Controller ButtonRDown pressed\" hat block\nvoid onevent_ControllerButtonRDown_pressed_0() {\n  Escalator.spin(reverse);\n  Flywheel.spin(reverse);\n  Spinning = true;\n  if (Brain.Timer.value() < 0.5) {\n    // possible double click\n    SecClick = true;\n  }\n  else {\n    // not double click\n    Brain.Timer.reset();\n    SecClick = false;\n  }\n}\n\n// \"when Controller ButtonRDown released\" hat block\nvoid onevent_ControllerButtonRDown_released_0() {\n  if (SecClick) {\n    if (Brain.Timer.value() < 0.5) {\n      SecClick = false;\n      Spinning = true;\n    }\n    else {\n      myblockfunction_IntakeSpin();\n      Spinning = true;\n      SecClick = false;\n    }\n  }\n  else {\n    myblockfunction_IntakeSpin();\n    Spinning = true;\n  }\n}\n\n\nint main() {\n  // Initializing Robot Configuration. DO NOT REMOVE!\n  vexcodeInit();\n\n  // register event handlers\n  Controller.ButtonRDown.pressed(onevent_ControllerButtonRDown_pressed_0);\n  Controller.ButtonRDown.released(onevent_ControllerButtonRDown_released_0);\n\n  wait(15, msec);\n  whenStarted1();\n}","target":"Physical"}